<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHh4AAAEAIACwDgAAFgAAACgAAAAeAAAAPAAAAAEAIAAAAAAAEA4AACMuAAAjLgAAAAAAAAAA
        AAAAAAANAAAAsQAAAPEAAAD/AAAAqwAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AC8AAABBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAHUAAAAjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACnAAAA/wAAAP8AAADiAAAA6AAAAPIAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFYAAAD/AAAAWwAAAAAAAAAAAAAAAAAAAAAAAAAgAAAA/wAAAP8AAAD/AAAA1QAAAIYAAAA2AAAAAAAA
        AAAAAAD9AAAA/wAAAKsAAAAAAAAAAAAAAIEAAADzAAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADIAAAD/AAAAsQAAAAAAAAAAAAAAAAAAAAAAAAAkAAAA/wAAAP8AAAD8AAAAZwAAAF0AAAA1AAAAAAAA
        AAAAAAD/AAAA/wAAAA8AAAAAAAAAAAAAAAAAAABxAAAAvQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADQAAAD/AAAAzAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAA7QAAAP8AAACcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAC0AAAA/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAG0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADQAAAD/AAAA+AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAP8AAACJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAGAAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAKwAAAASAAAAAAAAAAAAAAAAAAAAAAAA
        ADQAAAD/AAAA/wAAAC8AAAAAAAAAAAAAAAAAAAAAAAAAuwAAAP8AAACVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHUAAABzAAAAAAAAAAAAAAAAAAAAAAAA
        ADYAAAD/AAAA/wAAAGsAAAAAAAAAAAAAAAAAAAAAAAAAoQAAAP8AAAClAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAACSAAAACAAAAAAAAAAAAAAAAAAA
        ADoAAAD/AAAA/wAAAJkAAAAAAAAAAAAAAAAAAAAAAAAAhwAAAP8AAAC2AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB9AAAAVwAAAAAAAAAAAAAAAAAA
        AEAAAAD/AAAA2QAAAKQAAAANAAAAAAAAAAAAAAAAAAAAawAAAP8AAADJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAggAAAAAAAAAAAAAAAAAA
        AEoAAAD/AAAAkQAAAJQAAABeAAAAAAAAAAAAAAAAAAAATwAAAP8AAADcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhQAAABwAAAAAAAAAAAAA
        AFcAAAD/AAAAggAAAFUAAACeAAAAAAAAAAAAAAAAAAAANQAAAP8AAAD2AAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwAAAF0AAAAAAAAAAAAA
        AGgAAAD/AAAAlgAAAAQAAACyAAAABAAAAAAAAAAAAAAAHAAAAP8AAAD/AAAAGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASgAAAHwAAAAAAAAAAAAA
        AHsAAAD/AAAAmgAAAAAAAAChAAAAVgAAAAAAAAAAAAAABAAAAPcAAAD/AAAALAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAIgAAAAEAAAAAAAA
        AJQAAAD/AAAAigAAAAAAAABjAAAAmAAAAAAAAAAAAAAAAAAAANcAAAD/AAAAQAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMAAAA2AAAAAAAA
        ALMAAAD/AAAAdwAAAAAAAAAKAAAApgAAABQAAAAAAAAAAAAAALwAAAD/AAAAVwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIAAABbAAAAAAAA
        ANkAAAD/AAAAYQAAAAAAAAAAAAAAigAAAHEAAAAAAAAAAAAAAJ8AAAD/AAAAbgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFkAAABnAAAAAAAA
        AP0AAAD/AAAARwAAAAAAAAAAAAAAMQAAAKEAAAAAAAAAAAAAAIEAAAD/AAAAhQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUAAABlAAAAIgAA
        AP8AAAD/AAAAKAAAAAAAAAAAAAAAAAAAAJ0AAABKAAAAAAAAAGcAAAD/AAAAngAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAgAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAABbAAAAewAA
        AP8AAADyAAAABgAAAAAAAAAAAAAAAAAAAFIAAACdAAAAAAAAAE0AAAD/AAAAtwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAYAAABsAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhAAAA3AAA
        AP8AAADGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvAAAAFwAAABcAAAD/AAAA0gAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABmAAAAPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAAAA/wAA
        AP8AAACSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrAAAAhQAAAAAAAAD/AAAA8wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABCAAAAbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnAAAA/wAA
        AP8AAABRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAswAAADYAAADhAAAA/wAAAA8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAjwAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+AAAA/wAA
        APsAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbQAAAKoAAAC0AAAA/wAAACYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAKcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAD/AAAA/wAA
        AKcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL4AAAD0AAAA/wAAAD0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJUAAACwAAAAAAAAAAAAAAAAAAAAPwAAAPsAAAD/AAAA/wAA
        ACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsAAAD/AAAA/wAAAFoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBAAAA6wAAAJ4AAACyAAAA/wAAAP8AAAD/AAAAigAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAA/wAAAHwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmgAAAP8AAAD/AAAA/wAAAP8AAACYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmAAAA9gAAAOkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkAAABfAAAAagAAADUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAANAAAABhAAAAGwAA
        ACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsgAA
        AO0D/Px8Afx4DBj8eAwc/Hh8Pnw8fD48PHz/PDx8/xw8fP+cHHz/nBx8/8wcPP/MDDz/zEw8/8ROPP/k
        Rjz/5GY8/+RmPP/gcjzP4HI8x/D4POfw+Tzn8Pgc4/D8HPPh/hz5wf4c/AP/HP4H/xz/D/+A////4P//
        //A=
</value>
  </data>
</root>